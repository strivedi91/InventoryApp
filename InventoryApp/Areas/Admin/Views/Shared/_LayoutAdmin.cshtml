@using Microsoft.AspNet.Identity
@using InventoryApp_DL.Entities
@using InventoryApp.Helpers
@using InventoryApp_DL.Repositories
@using System.Linq.Expressions

<!DOCTYPE html>
<html>
<head>
    <meta http-equiv="content-type" content="text/html; charset=UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no">
    <meta name="viewport" content="width=device-width, initial-scale=1.0, user-scalable=no">

    <link rel="icon" type="image/png" sizes="16x16" href="">
    <title>@ViewBag.Title</title>
    <!-- external css -->
    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/jqueryval")
    @Styles.Render("~/assets/css/common.css")

    <link href="~/assets/css/nice-select.min.css" rel="stylesheet" type="text/css" media="all">
    <link href="~/assets/css/styles.css" rel="stylesheet" type="text/css" media="all">
    <link href="~/assets/css/responsive.css" rel="stylesheet" type="text/css" media="all">
    <link href="https://fonts.googleapis.com/css?family=Roboto+Slab:300,400,700" rel="stylesheet">
    <link href="https://fonts.googleapis.com/css?family=Open+Sans:300,300i,400,400i,600,600i,700,700i,800,800i" rel="stylesheet">
    @Styles.Render("~/assets/css/loadingbar.css")
    @Styles.Render("~/Content/bootstrap-datepicker/css/bootstrap-datepicker3.min.css")
    <link href="~/Areas/Admin/assets/css/DatePicker.css" rel="stylesheet" />
</head>
<body>
    <div id="divLoader" style="display: none;">
        <div style="border: none; z-index: 100010; position: fixed; top: 0px; bottom: 0px; left: 0px; right: 0px; overflow: hidden; padding: 0; margin: 0; background-color: #000; filter: alpha(opacity=40); opacity: 0.20;">
        </div>
    </div>
    <nav class="navbar navbar-expand-sm navbar-dark bg-white">
        <a class="navbar-brand" href="@Url.RouteUrl("Admin_default", new { action = "", controller = "AdminDashBoard" })">
            <img src="~/assets/images/logo1.png" alt="">
        </a>
        <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarsExample04" aria-controls="navbarsExample04" aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
        </button>

        <div class="collapse navbar-collapse" id="navbarsExample04">
            <ul class="navbar-nav ml-auto">
                @using (Html.BeginForm("LogOff", "Account", new { area = "" }, FormMethod.Post, new { id = "logoutForm", @class = "navbar-right", @style = "padding:0px !important;margin-right:0px !important" }))
                {
                    @Html.AntiForgeryToken()
                    <li class="nav-item dropdown">

                        <a class="nav-link dropdown-toggle" href="" id="dropdown04" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                            <div class="user-name">
                                <img src="~/assets/images/north-face-brand.png" alt="North Face Brand"><span>Welcome, <b>@User.Identity.GetUserName()</b></span>
                            </div>
                        </a>
                        <div class="dropdown-menu" aria-labelledby="dropdown04">
                            <a class="dropdown-item" id="lnklogout_loader" href="javascript:document.getElementById('logoutForm').submit()" title="Logout">Logout</a>
                        </div>
                    </li>
                }
            </ul>
        </div>
    </nav>

    <div class="container-fluid">
        <div class="row">
            <nav class="col-xl-3 d-md-block bg-light sidebar bg-white">
                <div class="sidebar-sticky menu-item">
                    <ul class="nav flex-column">
                        @{
                            List<Expression<Func<Pages, Object>>> includesforPages = new List<Expression<Func<Pages, object>>>();
                            Expression<Func<Pages, object>> IncludePageAccess = (pageAccess) => pageAccess.PageAccesses;
                            includesforPages.Add(IncludePageAccess);

                            string currentUserId = User.Identity.GetUserId();

                            var pages = Repository<Pages>.GetEntityListForQuery(x => x.IsDeleted == false && x.PageAccesses.Any(y => y.UserId == currentUserId && y.IsAccessGranted == true) == true, null, includesforPages).Item1;
                        }

                        @if (pages.Where(x => x.PageName.ToLower() == Enums.Menus.Dashboard.ToString().ToLower()).FirstOrDefault() != null)
                        {
                            <li class="nav-item">
                                <a id="lnkDashboard" class="nav-link active" href="@Url.RouteUrl("Admin_default", new { action = "Index", controller = "Home" })">
                                    <i class="fa fa-dashboard"></i>
                                    &nbsp;@Enums.GetEnumDescription(Enums.Menus.Dashboard)
                                </a>
                            </li>
                        }

                        @if (pages.Where(x => x.PageName.ToLower() == Enums.Menus.Sellers.ToString().ToLower()).FirstOrDefault() != null)
                        {
                            <li class="nav-item">
                                <a id="lnkManageSellers" class="nav-link" href="@Url.RouteUrl("Admin_default", new { action = "", controller = "ManageUsers" })">
                                    <i class="fa fa-bullhorn"></i>
                                    &nbsp;@Enums.GetEnumDescription(Enums.Menus.Sellers)
                                </a>
                            </li>
                        }

                        @if (pages.Where(x => x.PageName.ToLower() == Enums.Menus.Categories.ToString().ToLower()).FirstOrDefault() != null)
                        {
                            <li class="nav-item">
                                <a id="lnkCategory" class="nav-link" href="@Url.RouteUrl("Admin_default", new { action = "", controller = "Category" })">
                                    <i class="fa fa-building-o"></i>
                                    &nbsp;@Enums.GetEnumDescription(Enums.Menus.Categories)
                                </a>
                            </li>
                        }

                        @if (pages.Where(x => x.PageName.ToLower() == Enums.Menus.Products.ToString().ToLower()).FirstOrDefault() != null)
                        {
                            <li class="nav-item">
                                <a id="lnkProduct" class="nav-link" href="@Url.RouteUrl("Admin_default", new { action = "", controller = "Products" })">
                                    <i class="fa fa-building-o"></i>
                                    &nbsp;@Enums.GetEnumDescription(Enums.Menus.Products)
                                </a>
                            </li>
                        }

                        @if (pages.Where(x => x.PageName.ToLower() == Enums.Menus.Orders.ToString().ToLower()).FirstOrDefault() != null)
                        {
                            <li class="nav-item">
                                @{
                                    var loOrders = Repository<Orders>.GetEntityListForQuery(null).Item1;

                                    loOrders = loOrders.Where(x => x.CreatedOn.Date == DateTime.Now.Date).ToList();
                                }
                                <a id="lnkManageOrders" class="nav-link" href="@Url.RouteUrl("Admin_default", new { action = "", controller = "Order" })">
                                    <i class="fa fa-building-o"></i>
                                    &nbsp;@Enums.GetEnumDescription(Enums.Menus.Orders)&nbsp;(@loOrders.Count())
                                </a>
                            </li>
                        }

                        @if (pages.Where(x => x.PageName.ToLower() == Enums.Menus.Coupons.ToString().ToLower()).FirstOrDefault() != null)
                        {
                            <li class="nav-item">
                                <a id="lnkCoupon" class="nav-link" href="@Url.RouteUrl("Admin_default", new { action = "Index", controller = "Coupons" })">
                                    <i class="fa fa-building-o"></i>
                                    &nbsp;@Enums.GetEnumDescription(Enums.Menus.Coupons)
                                </a>
                            </li>
                        }

                        @if (pages.Where(x => x.PageName.ToLower() == Enums.Menus.Suggestions.ToString().ToLower()).FirstOrDefault() != null)
                        {
                            <li class="nav-item">
                                @{
                                    var loSuggestions = Repository<Suggestions>.GetEntityListForQuery(null).Item1;

                                    loSuggestions = loSuggestions.Where(x => x.CreatedOn?.Date == DateTime.Now.Date).ToList();
                                }
                                <a id="lnkSuggestion" class="nav-link" href="@Url.RouteUrl("Admin_default", new { action = "Index", controller = "Suggestion" })">
                                    <i class="fa fa-info-circle"></i>
                                    &nbsp;@Enums.GetEnumDescription(Enums.Menus.Suggestions)&nbsp;(@loSuggestions.Count())
                                </a>
                            </li>
                        }

                        @if (pages.Where(x => x.PageName.ToLower() == Enums.GetEnumDescription(Enums.Menus.Page_Access).ToLower()).FirstOrDefault() != null)
                        {
                            <li class="nav-item">
                                <a id="lnkPageAccess" class="nav-link" href="@Url.RouteUrl("Admin_default", new { action = "Index", controller = "PageAccess" })">
                                    <i class="fa fa-lock"></i>
                                    &nbsp;@Enums.GetEnumDescription(Enums.Menus.Page_Access)
                                </a>
                            </li>
                        }

                        @if (pages.Where(x => x.PageName.ToLower() == Enums.GetEnumDescription(Enums.Menus.Notifications).ToLower()).FirstOrDefault() != null)
                        {
                            <li class="nav-item">
                                <a id="lnkPageNotification" class="nav-link" href="@Url.RouteUrl("Admin_default", new { action = "Index", controller = "Notifications" })">
                                    <i class="fa fa-lock"></i>
                                    &nbsp;@Enums.GetEnumDescription(Enums.Menus.Notifications)
                                </a>
                            </li>
                        }
                    </ul>
                </div>
            </nav>
            <div class="main col-xl-9 ml-sm-auto">
                <div class="alert alert-success hide margin-top-alert" id="divSuccess" style="display:block">
                    <button type="button" class="close" data-dismiss="alert">x</button>
                    <i class='fa fa-check paymenttick'></i>
                    <span id="spanMessage"></span>
                </div>
                @RenderBody()
            </div>
        </div>
    </div>

    <!-- Back Top -->
    <div class="back-top"><a href="#0"><i class="fa fa-angle-up" aria-hidden="true"></i></a></div>

    <!-- Scripts -->
    <script type="text/javascript" src="~/assets/js/jquery.min.js"></script>
    <script type="text/javascript" src="~/assets/js/bootstrap.min.js"></script>
    <script type="text/javascript" src="~/assets/js/plugins.js"></script>
    @*<script type="text/javascript" src="~/assets/js/scripts.js"></script>*@

    @Scripts.Render("~/bundles/jqueryui")
    @Scripts.Render("~/assets/scripts/jquery.loadingbar.min.js")

    @Scripts.Render("~/Scripts/jquery.validate.js")
    @Scripts.Render("~/Scripts/jquery.validate.unobtrusive.js")

    @Scripts.Render("~/Scripts/CommonFunctions.js?ver=1.3")
    <link href="~/Content/select2.min.css" rel="stylesheet" />
    <script src="~/Scripts/select2/select2.min.js"></script>

    <!-- END PAGE LEVEL SCRIPTS -->
    @RenderSection("scripts", required: false)
    <script type="text/javascript">
        var lsLoginUrl = "#";
        jQuery(document).ready(function () {

            $('a[id*=_loader]').click(function () {
                if ($("#loadingbar").length === 0) {
                    $("body").append("<div id='loadingbar'></div>")
                    $("#divLoader").css("display", "block");
                    $("#loadingbar").addClass("waiting").append($("<dt/><dd/>"));
                    $("#loadingbar").width((50 + Math.random() * 30) + "%");
                }
            });

            $(document).ajaxError(
                function (event, jqXHR, ajaxSettings, thrownError) {
                    if (jqXHR.status == '403') {
                    }
                    else if (jqXHR.status == '401') {

                    }
                });

            $.ajaxSetup({
                beforeSend: function () {
                    if ($("#loadingbar").length === 0) {
                        $("body").append("<div id='loadingbar'></div>")
                        $("#divLoader").css("display", "block");
                        $("#loadingbar").addClass("waiting").append($("<dt/><dd/>"));
                        $("#loadingbar").width((50 + Math.random() * 30) + "%");
                    }
                },
                complete: function () {
                    $("#loadingbar").width("101%").delay(200).fadeOut(400, function () {
                        $(this).remove();
                        $("#divLoader").css("display", "none");
                    });
                }
            });
        });

        window.onload = function () {
            var tabID = $("#ActiveMenu").text();
            $(".menu1").each(function (index) {
                var menuSelected = $(this).attr("id");
                $(this).parent().removeClass("open active");
                if (String(tabID).toLowerCase() == String(menuSelected).toLowerCase()) {
                    $(this).parent().addClass("open active");
                    $(this).append("<span class='selected'></span>")
                }
            });
        }
    </script>
</body>
</html>
